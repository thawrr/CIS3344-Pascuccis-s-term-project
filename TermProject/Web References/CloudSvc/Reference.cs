//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TermProject.CloudSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CloudServiceSoap", Namespace="http://tempuri.org/")]
    public partial class CloudService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenticateMethodOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByLoginIDandPassOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFilesByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback AccountUpdateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCloudUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllCloudAdminsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllRolesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllIntervalsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTransByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTransByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllAdminTransByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOneFileOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CloudService() {
            this.Url = global::TermProject.Properties.Settings.Default.TermProject_CloudSvc_CloudService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenticateMethodCompletedEventHandler AuthenticateMethodCompleted;
        
        /// <remarks/>
        public event GetUserByLoginIDandPassCompletedEventHandler GetUserByLoginIDandPassCompleted;
        
        /// <remarks/>
        public event UpdateAccountCompletedEventHandler UpdateAccountCompleted;
        
        /// <remarks/>
        public event AddFileCompletedEventHandler AddFileCompleted;
        
        /// <remarks/>
        public event UpdateFileCompletedEventHandler UpdateFileCompleted;
        
        /// <remarks/>
        public event GetFilesByUserIDCompletedEventHandler GetFilesByUserIDCompleted;
        
        /// <remarks/>
        public event DeleteFileCompletedEventHandler DeleteFileCompleted;
        
        /// <remarks/>
        public event AccountUpdateCompletedEventHandler AccountUpdateCompleted;
        
        /// <remarks/>
        public event AddUserCompletedEventHandler AddUserCompleted;
        
        /// <remarks/>
        public event GetAllCloudUsersCompletedEventHandler GetAllCloudUsersCompleted;
        
        /// <remarks/>
        public event GetAllCloudAdminsCompletedEventHandler GetAllCloudAdminsCompleted;
        
        /// <remarks/>
        public event GetAllRolesCompletedEventHandler GetAllRolesCompleted;
        
        /// <remarks/>
        public event GetAllIntervalsCompletedEventHandler GetAllIntervalsCompleted;
        
        /// <remarks/>
        public event GetUserByIDCompletedEventHandler GetUserByIDCompleted;
        
        /// <remarks/>
        public event GetAllTransByIDCompletedEventHandler GetAllTransByIDCompleted;
        
        /// <remarks/>
        public event GetAllTransByDateCompletedEventHandler GetAllTransByDateCompleted;
        
        /// <remarks/>
        public event GetAllAdminTransByDateCompletedEventHandler GetAllAdminTransByDateCompleted;
        
        /// <remarks/>
        public event GetOneFileCompletedEventHandler GetOneFileCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AuthenticateMethod", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AuthenticateMethod(string LoginID, string Password) {
            object[] results = this.Invoke("AuthenticateMethod", new object[] {
                        LoginID,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateMethodAsync(string LoginID, string Password) {
            this.AuthenticateMethodAsync(LoginID, Password, null);
        }
        
        /// <remarks/>
        public void AuthenticateMethodAsync(string LoginID, string Password, object userState) {
            if ((this.AuthenticateMethodOperationCompleted == null)) {
                this.AuthenticateMethodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateMethodOperationCompleted);
            }
            this.InvokeAsync("AuthenticateMethod", new object[] {
                        LoginID,
                        Password}, this.AuthenticateMethodOperationCompleted, userState);
        }
        
        private void OnAuthenticateMethodOperationCompleted(object arg) {
            if ((this.AuthenticateMethodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateMethodCompleted(this, new AuthenticateMethodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByLoginIDandPass", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserByLoginIDandPass(string LoginID, string Password) {
            object[] results = this.Invoke("GetUserByLoginIDandPass", new object[] {
                        LoginID,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByLoginIDandPassAsync(string LoginID, string Password) {
            this.GetUserByLoginIDandPassAsync(LoginID, Password, null);
        }
        
        /// <remarks/>
        public void GetUserByLoginIDandPassAsync(string LoginID, string Password, object userState) {
            if ((this.GetUserByLoginIDandPassOperationCompleted == null)) {
                this.GetUserByLoginIDandPassOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByLoginIDandPassOperationCompleted);
            }
            this.InvokeAsync("GetUserByLoginIDandPass", new object[] {
                        LoginID,
                        Password}, this.GetUserByLoginIDandPassOperationCompleted, userState);
        }
        
        private void OnGetUserByLoginIDandPassOperationCompleted(object arg) {
            if ((this.GetUserByLoginIDandPassCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByLoginIDandPassCompleted(this, new GetUserByLoginIDandPassCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateAccount(System.Data.DataSet objDS, int UserID, string LoginID, string Password) {
            object[] results = this.Invoke("UpdateAccount", new object[] {
                        objDS,
                        UserID,
                        LoginID,
                        Password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(System.Data.DataSet objDS, int UserID, string LoginID, string Password) {
            this.UpdateAccountAsync(objDS, UserID, LoginID, Password, null);
        }
        
        /// <remarks/>
        public void UpdateAccountAsync(System.Data.DataSet objDS, int UserID, string LoginID, string Password, object userState) {
            if ((this.UpdateAccountOperationCompleted == null)) {
                this.UpdateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAccountOperationCompleted);
            }
            this.InvokeAsync("UpdateAccount", new object[] {
                        objDS,
                        UserID,
                        LoginID,
                        Password}, this.UpdateAccountOperationCompleted, userState);
        }
        
        private void OnUpdateAccountOperationCompleted(object arg) {
            if ((this.UpdateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddFile([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] input, int userID, string fileName, string fileType, int fileSize, string LoginID, string Password) {
            object[] results = this.Invoke("AddFile", new object[] {
                        input,
                        userID,
                        fileName,
                        fileType,
                        fileSize,
                        LoginID,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddFileAsync(byte[] input, int userID, string fileName, string fileType, int fileSize, string LoginID, string Password) {
            this.AddFileAsync(input, userID, fileName, fileType, fileSize, LoginID, Password, null);
        }
        
        /// <remarks/>
        public void AddFileAsync(byte[] input, int userID, string fileName, string fileType, int fileSize, string LoginID, string Password, object userState) {
            if ((this.AddFileOperationCompleted == null)) {
                this.AddFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFileOperationCompleted);
            }
            this.InvokeAsync("AddFile", new object[] {
                        input,
                        userID,
                        fileName,
                        fileType,
                        fileSize,
                        LoginID,
                        Password}, this.AddFileOperationCompleted, userState);
        }
        
        private void OnAddFileOperationCompleted(object arg) {
            if ((this.AddFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFileCompleted(this, new AddFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateFile(int fileID, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] input, int userID, string fileName, string fileType, int fileSize, int roleID, string LoginID, string Password) {
            object[] results = this.Invoke("UpdateFile", new object[] {
                        fileID,
                        input,
                        userID,
                        fileName,
                        fileType,
                        fileSize,
                        roleID,
                        LoginID,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFileAsync(int fileID, byte[] input, int userID, string fileName, string fileType, int fileSize, int roleID, string LoginID, string Password) {
            this.UpdateFileAsync(fileID, input, userID, fileName, fileType, fileSize, roleID, LoginID, Password, null);
        }
        
        /// <remarks/>
        public void UpdateFileAsync(int fileID, byte[] input, int userID, string fileName, string fileType, int fileSize, int roleID, string LoginID, string Password, object userState) {
            if ((this.UpdateFileOperationCompleted == null)) {
                this.UpdateFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFileOperationCompleted);
            }
            this.InvokeAsync("UpdateFile", new object[] {
                        fileID,
                        input,
                        userID,
                        fileName,
                        fileType,
                        fileSize,
                        roleID,
                        LoginID,
                        Password}, this.UpdateFileOperationCompleted, userState);
        }
        
        private void OnUpdateFileOperationCompleted(object arg) {
            if ((this.UpdateFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFileCompleted(this, new UpdateFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFilesByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFilesByUserID(int userID, string LoginID, string Password) {
            object[] results = this.Invoke("GetFilesByUserID", new object[] {
                        userID,
                        LoginID,
                        Password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFilesByUserIDAsync(int userID, string LoginID, string Password) {
            this.GetFilesByUserIDAsync(userID, LoginID, Password, null);
        }
        
        /// <remarks/>
        public void GetFilesByUserIDAsync(int userID, string LoginID, string Password, object userState) {
            if ((this.GetFilesByUserIDOperationCompleted == null)) {
                this.GetFilesByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFilesByUserIDOperationCompleted);
            }
            this.InvokeAsync("GetFilesByUserID", new object[] {
                        userID,
                        LoginID,
                        Password}, this.GetFilesByUserIDOperationCompleted, userState);
        }
        
        private void OnGetFilesByUserIDOperationCompleted(object arg) {
            if ((this.GetFilesByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFilesByUserIDCompleted(this, new GetFilesByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteFile(int fileID, int userID, string LoginID, string Password) {
            object[] results = this.Invoke("DeleteFile", new object[] {
                        fileID,
                        userID,
                        LoginID,
                        Password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteFileAsync(int fileID, int userID, string LoginID, string Password) {
            this.DeleteFileAsync(fileID, userID, LoginID, Password, null);
        }
        
        /// <remarks/>
        public void DeleteFileAsync(int fileID, int userID, string LoginID, string Password, object userState) {
            if ((this.DeleteFileOperationCompleted == null)) {
                this.DeleteFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFileOperationCompleted);
            }
            this.InvokeAsync("DeleteFile", new object[] {
                        fileID,
                        userID,
                        LoginID,
                        Password}, this.DeleteFileOperationCompleted, userState);
        }
        
        private void OnDeleteFileOperationCompleted(object arg) {
            if ((this.DeleteFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFileCompleted(this, new DeleteFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AccountUpdate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AccountUpdate(int userID, string name, string email, int sc, string pw) {
            object[] results = this.Invoke("AccountUpdate", new object[] {
                        userID,
                        name,
                        email,
                        sc,
                        pw});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AccountUpdateAsync(int userID, string name, string email, int sc, string pw) {
            this.AccountUpdateAsync(userID, name, email, sc, pw, null);
        }
        
        /// <remarks/>
        public void AccountUpdateAsync(int userID, string name, string email, int sc, string pw, object userState) {
            if ((this.AccountUpdateOperationCompleted == null)) {
                this.AccountUpdateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAccountUpdateOperationCompleted);
            }
            this.InvokeAsync("AccountUpdate", new object[] {
                        userID,
                        name,
                        email,
                        sc,
                        pw}, this.AccountUpdateOperationCompleted, userState);
        }
        
        private void OnAccountUpdateOperationCompleted(object arg) {
            if ((this.AccountUpdateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AccountUpdateCompleted(this, new AccountUpdateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUser(string fullName, string email, string password) {
            object[] results = this.Invoke("AddUser", new object[] {
                        fullName,
                        email,
                        password});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserAsync(string fullName, string email, string password) {
            this.AddUserAsync(fullName, email, password, null);
        }
        
        /// <remarks/>
        public void AddUserAsync(string fullName, string email, string password, object userState) {
            if ((this.AddUserOperationCompleted == null)) {
                this.AddUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserOperationCompleted);
            }
            this.InvokeAsync("AddUser", new object[] {
                        fullName,
                        email,
                        password}, this.AddUserOperationCompleted, userState);
        }
        
        private void OnAddUserOperationCompleted(object arg) {
            if ((this.AddUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCompleted(this, new AddUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCloudUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCloudUsers(string email, string password) {
            object[] results = this.Invoke("GetAllCloudUsers", new object[] {
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCloudUsersAsync(string email, string password) {
            this.GetAllCloudUsersAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetAllCloudUsersAsync(string email, string password, object userState) {
            if ((this.GetAllCloudUsersOperationCompleted == null)) {
                this.GetAllCloudUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCloudUsersOperationCompleted);
            }
            this.InvokeAsync("GetAllCloudUsers", new object[] {
                        email,
                        password}, this.GetAllCloudUsersOperationCompleted, userState);
        }
        
        private void OnGetAllCloudUsersOperationCompleted(object arg) {
            if ((this.GetAllCloudUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCloudUsersCompleted(this, new GetAllCloudUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllCloudAdmins", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllCloudAdmins(string email, string password) {
            object[] results = this.Invoke("GetAllCloudAdmins", new object[] {
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllCloudAdminsAsync(string email, string password) {
            this.GetAllCloudAdminsAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetAllCloudAdminsAsync(string email, string password, object userState) {
            if ((this.GetAllCloudAdminsOperationCompleted == null)) {
                this.GetAllCloudAdminsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllCloudAdminsOperationCompleted);
            }
            this.InvokeAsync("GetAllCloudAdmins", new object[] {
                        email,
                        password}, this.GetAllCloudAdminsOperationCompleted, userState);
        }
        
        private void OnGetAllCloudAdminsOperationCompleted(object arg) {
            if ((this.GetAllCloudAdminsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllCloudAdminsCompleted(this, new GetAllCloudAdminsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllRoles", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllRoles(string email, string password) {
            object[] results = this.Invoke("GetAllRoles", new object[] {
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllRolesAsync(string email, string password) {
            this.GetAllRolesAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetAllRolesAsync(string email, string password, object userState) {
            if ((this.GetAllRolesOperationCompleted == null)) {
                this.GetAllRolesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllRolesOperationCompleted);
            }
            this.InvokeAsync("GetAllRoles", new object[] {
                        email,
                        password}, this.GetAllRolesOperationCompleted, userState);
        }
        
        private void OnGetAllRolesOperationCompleted(object arg) {
            if ((this.GetAllRolesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllRolesCompleted(this, new GetAllRolesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllIntervals", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllIntervals(string email, string password) {
            object[] results = this.Invoke("GetAllIntervals", new object[] {
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllIntervalsAsync(string email, string password) {
            this.GetAllIntervalsAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetAllIntervalsAsync(string email, string password, object userState) {
            if ((this.GetAllIntervalsOperationCompleted == null)) {
                this.GetAllIntervalsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllIntervalsOperationCompleted);
            }
            this.InvokeAsync("GetAllIntervals", new object[] {
                        email,
                        password}, this.GetAllIntervalsOperationCompleted, userState);
        }
        
        private void OnGetAllIntervalsOperationCompleted(object arg) {
            if ((this.GetAllIntervalsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllIntervalsCompleted(this, new GetAllIntervalsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserByID(int userID, string email, string password) {
            object[] results = this.Invoke("GetUserByID", new object[] {
                        userID,
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int userID, string email, string password) {
            this.GetUserByIDAsync(userID, email, password, null);
        }
        
        /// <remarks/>
        public void GetUserByIDAsync(int userID, string email, string password, object userState) {
            if ((this.GetUserByIDOperationCompleted == null)) {
                this.GetUserByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserByIDOperationCompleted);
            }
            this.InvokeAsync("GetUserByID", new object[] {
                        userID,
                        email,
                        password}, this.GetUserByIDOperationCompleted, userState);
        }
        
        private void OnGetUserByIDOperationCompleted(object arg) {
            if ((this.GetUserByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserByIDCompleted(this, new GetUserByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTransByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllTransByID(int userID, string email, string password) {
            object[] results = this.Invoke("GetAllTransByID", new object[] {
                        userID,
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTransByIDAsync(int userID, string email, string password) {
            this.GetAllTransByIDAsync(userID, email, password, null);
        }
        
        /// <remarks/>
        public void GetAllTransByIDAsync(int userID, string email, string password, object userState) {
            if ((this.GetAllTransByIDOperationCompleted == null)) {
                this.GetAllTransByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTransByIDOperationCompleted);
            }
            this.InvokeAsync("GetAllTransByID", new object[] {
                        userID,
                        email,
                        password}, this.GetAllTransByIDOperationCompleted, userState);
        }
        
        private void OnGetAllTransByIDOperationCompleted(object arg) {
            if ((this.GetAllTransByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTransByIDCompleted(this, new GetAllTransByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTransByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllTransByDate(int interval, string email, string password) {
            object[] results = this.Invoke("GetAllTransByDate", new object[] {
                        interval,
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTransByDateAsync(int interval, string email, string password) {
            this.GetAllTransByDateAsync(interval, email, password, null);
        }
        
        /// <remarks/>
        public void GetAllTransByDateAsync(int interval, string email, string password, object userState) {
            if ((this.GetAllTransByDateOperationCompleted == null)) {
                this.GetAllTransByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTransByDateOperationCompleted);
            }
            this.InvokeAsync("GetAllTransByDate", new object[] {
                        interval,
                        email,
                        password}, this.GetAllTransByDateOperationCompleted, userState);
        }
        
        private void OnGetAllTransByDateOperationCompleted(object arg) {
            if ((this.GetAllTransByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTransByDateCompleted(this, new GetAllTransByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllAdminTransByDate", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetAllAdminTransByDate(int interval, string email, string password) {
            object[] results = this.Invoke("GetAllAdminTransByDate", new object[] {
                        interval,
                        email,
                        password});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllAdminTransByDateAsync(int interval, string email, string password) {
            this.GetAllAdminTransByDateAsync(interval, email, password, null);
        }
        
        /// <remarks/>
        public void GetAllAdminTransByDateAsync(int interval, string email, string password, object userState) {
            if ((this.GetAllAdminTransByDateOperationCompleted == null)) {
                this.GetAllAdminTransByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllAdminTransByDateOperationCompleted);
            }
            this.InvokeAsync("GetAllAdminTransByDate", new object[] {
                        interval,
                        email,
                        password}, this.GetAllAdminTransByDateOperationCompleted, userState);
        }
        
        private void OnGetAllAdminTransByDateOperationCompleted(object arg) {
            if ((this.GetAllAdminTransByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllAdminTransByDateCompleted(this, new GetAllAdminTransByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOneFile", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOneFile(int fileID, int userID, string LoginID, string Password) {
            object[] results = this.Invoke("GetOneFile", new object[] {
                        fileID,
                        userID,
                        LoginID,
                        Password});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOneFileAsync(int fileID, int userID, string LoginID, string Password) {
            this.GetOneFileAsync(fileID, userID, LoginID, Password, null);
        }
        
        /// <remarks/>
        public void GetOneFileAsync(int fileID, int userID, string LoginID, string Password, object userState) {
            if ((this.GetOneFileOperationCompleted == null)) {
                this.GetOneFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOneFileOperationCompleted);
            }
            this.InvokeAsync("GetOneFile", new object[] {
                        fileID,
                        userID,
                        LoginID,
                        Password}, this.GetOneFileOperationCompleted, userState);
        }
        
        private void OnGetOneFileOperationCompleted(object arg) {
            if ((this.GetOneFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOneFileCompleted(this, new GetOneFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AuthenticateMethodCompletedEventHandler(object sender, AuthenticateMethodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateMethodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateMethodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserByLoginIDandPassCompletedEventHandler(object sender, GetUserByLoginIDandPassCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByLoginIDandPassCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByLoginIDandPassCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateAccountCompletedEventHandler(object sender, UpdateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddFileCompletedEventHandler(object sender, AddFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateFileCompletedEventHandler(object sender, UpdateFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetFilesByUserIDCompletedEventHandler(object sender, GetFilesByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFilesByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFilesByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteFileCompletedEventHandler(object sender, DeleteFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AccountUpdateCompletedEventHandler(object sender, AccountUpdateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AccountUpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AccountUpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AddUserCompletedEventHandler(object sender, AddUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllCloudUsersCompletedEventHandler(object sender, GetAllCloudUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCloudUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCloudUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllCloudAdminsCompletedEventHandler(object sender, GetAllCloudAdminsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllCloudAdminsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllCloudAdminsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllRolesCompletedEventHandler(object sender, GetAllRolesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllIntervalsCompletedEventHandler(object sender, GetAllIntervalsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllIntervalsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllIntervalsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetUserByIDCompletedEventHandler(object sender, GetUserByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllTransByIDCompletedEventHandler(object sender, GetAllTransByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTransByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTransByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllTransByDateCompletedEventHandler(object sender, GetAllTransByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTransByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTransByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetAllAdminTransByDateCompletedEventHandler(object sender, GetAllAdminTransByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllAdminTransByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllAdminTransByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetOneFileCompletedEventHandler(object sender, GetOneFileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOneFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOneFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591